//
//  Main.swift
//  leetcode
//
//  Created by Henry on 2019/4/14.
//  Copyright Â© 2019 Henry. All rights reserved.
//

import Foundation

//TwoSumSolution.init().test()
//AddTwoNumbersSolution.init().test()
//LongestSubstringWithoutRepeatingCharactersSolution.init().test()
//PathSumSolution.init().test()
//PalindromeNumberSolution.init().test()
//ReverseIntegerSolution.init().test()
//RomanToIntegerSolution.init().test()
//LongestCommonPrefixSolution.init().test()
//MaximumDepthOfBinaryTreeSolution.init().test()
//AddBinarySolution.init().test()
//InvertBinaryTreeSolution.init().test()
//SqrtXSolution.init().test()
//AddDigitsSolution.init().test()
//PowerOfThreeSolution.init().test()
//ValidParenthesesSolution.init().test()
//PascalTriangleSolution.init().testGenerator()
//PascalTriangleSolution.init().testGetRow()
//PlusOneSolution.init().test()
//ClimbingStairsSolution.init().test()
//FibonacciNumberSolution.init().test()
//Base7Solution.init().test()
//AddToArrayFormOfIntegerSolution.init().test()
//BinaryNumberWithAlternatingBitsSolution.init().test()
//BinarySearchSolution.init().test()
//ArrangingCoinsSolution.init().test()
//ArrayPartitionSolution.init().testArrayPairSum()
//AddStringsSolution.init().test()
//CountPrimesSolution.init().test()
//ConvertSortedArrayToBinarySearchTreeSolution.init().test()
//BinaryPrefixDivisibleBy5Solution.init().test()
//oneBitAndTwoBitCharactersSolution.init().test()
//AssignCookiesSolution.init().test()
//AvailableCapturesForRookSolution.init().test()
//AverageOfLevelInBinaryTreeSolution.init().test()
//BackspaceStringCompareSolution.init().test()
//BalancedBinaryTreeSolution.init().test()
//BaseballGameSolution.init().test()
//BestTimeToBuyAndSellStockSolution.init().testOnce()
//BestTimeToBuyAndSellStockSolution.init().testMultiple()
//BinaryGapSolution.init().test()
//BinaryTreeLevelOrderTraversalSolution.init().test()
//BinaryTreePathsSolution.init().test()
//RemoveDuplicatesFromSortedArraySolution.init().test()
//MergeTwoSortedListsSolution.init().test()
//RemoveElementSolution.init().test()
//ImplementStrStrSolution.init().test()
//SearchInsertPositionSolution.init().test()
//CountAndSaySolution.init().test()
//MaximumSubarraySolution.init().test()
//LengthOfLastWordSolution.init().test()
//RemoveDuplicatesFromSortedListSolution.init().test()
//MergeSortedArraySolution.init().test()
//SameTreeSolution.init().test()
//SymmetricTreeSolution.init().test()
//MinStack.init().test()
//ExcelSheetColumnNumberSolution.init().test()
//MinimumDepthOfBinaryTreeSolution.init().test()
//ValidPalindromeSolution.init().test()
//ExcelSheetColumnTitleSolution.init().test()
//TwoSumII_InputArrayIsSortedSolution.init().test()
//FactorialTrailingZeroesSolution.init().test()
//MajorityElementSolution.init().test()
//PowerOfTwoSolution.init().test()
//ReverseLinkedListSolution.init().test()
//RotateArraySolution.init().test()
//HappyNumberSolution.init().test()
//HouseRobberSolution.init().test()
//RemoveLinkedListElementsSolution.init().test()
//IsomorphicStringsSolution.init().test()
//ContainsDuplicateSolution.init().test()
//PalindromeLinkedListSolution.init().test()
//ImplementQueueUsingStacksMyQueue.init().test()
//ImplementStackUsingQueuesMyStack.init().test()
//ContainsDuplicateIISolution.init().test()
//MissingNumberSolution.init().test()
//SquaresOfASortedArraySolution.init().test()
//LargestPerimeterTriangleSolution.init().test()
//JewelsAndStonesSolution.init().test()
//UglyNumberSolution.init().test()
//ValidAnagramSolution.init().test()
//SumOfEvenNumbersAfterQueriesSolution.init().test()
//RangeSumOfBSTSolution.init().test()
//ToLowerCaseSolution.init().test()
//FlippingAnImageSolution.init().test()
//RemoveOutermostParenthesesSolution.init().test()
//UniqueMorseCodeWordsSolution.init().test()
//RobotReturnToOriginSolution.init().test()
//MergeTwoBinaryTreesSolution.init().test()
//HammingDistanceSolution.init().test()
//DIStringMatchSolution.init().test()
//SortArrayByParitySolution.init().test()
//NimGameSolution.init().test()
//PeakIndexInAMountainArraySolution.init().test()
//NumberComplementSolution.init().test()
//SelfDividingNumbersSolution.init().test()
//UniqueEmailAddressesSolution.init().test()
//KeyboardRowSolution.init().test()
//ReverseStringSolution.init().test()
//N_RepeatedElementInSize2NArraySolution.init().test()
//SearchInABinarySearchTreeSolution.init().test()
//ReverseWordsInAStringIIISolution.init().test()
//UnivaluedBinaryTreeSolution.init().test()
//SortArrayByParityIISolution.init().test()
//DeleteColumnsToMakeSortedSolution.init().test()
//IntersectionOfTwoArraysSolution.init().test()
//DistributeCandiesSolution.init().test()
//FindCommonCharactersSolution.init().test()
//TransposeMatrixSolution.init().test()
//ShortestDistanceToACharacterSolution.init().test()
//SubdomainVisitCountSolution.init().test()
//NumberOfLinesToWriteStringSolution.init().test()
//TrimABinarySearchTreeSolution.init().test()
//IslandPerimeterSolution.init().test()
//SmallestRangeISolution.init().test()
//LongestUncommonSubsequenceISolution.init().test()
//PrimeNumberOfSetBitsInBinaryRepresentationSolution.init().test()
//MiddleOfTheLinkedListSolution.init().test()
//FizzBuzzSolution.init().test()
//DivisorGameSolution.init().test()
//NextGreaterElementISolution.init().test()
//ToeplitzMatrixSolution.init().test()
//ReshapeTheMatrixSolution.init().test()
//GroupsOfSpecial_EquivalentStringsSolution.init().test()
//DesignHashSetMyHashSet.init().test()
//ProjectionAreaOf3DShapesSolution.init().test()
//FindTheDifferenceSolution.init().test()
//LargestTriangleAreaSolution.init().test()
//GoatLatinSolution.init().test()
//LetterCasePermutationSolution.init().test()
//SumOfTwoIntegersSolution.init().test()
UncommonWordsFromTwoSentencesSolution.init().test()

